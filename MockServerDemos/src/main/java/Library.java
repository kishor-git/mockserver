/*
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'Kishor' at '11/25/17 10:02 PM' with Gradle 2.14
 *
 * @author Kishor, @date 11/25/17 10:02 PM
 */

import static org.mockserver.integration.ClientAndServer.startClientAndServer;
import static org.mockserver.model.HttpRequest.request;
import static org.mockserver.model.HttpResponse.response;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.mockserver.client.server.MockServerClient;
import org.mockserver.integration.ClientAndServer;


public class Library {
	
	//private ClientAndProxy proxy;
	private ClientAndServer mockServer;
	
	
	@Before
	public void startProxy() {
	    mockServer = startClientAndServer(1080);
	    //proxy = startClientAndProxy(1090);
	}
	
	@Test
	public void testSimpleHttpCall() throws IOException {
		// set expectations
		new MockServerClient("localhost",1080)
			.when(
					request()
						.withMethod("GET")
						.withPath("/first")
				)
			.respond(
					response()
						.withStatusCode(200)
						.withBody("your first request recieved")
					);
					
		
		URL obj = null;
		try {
			obj = new URL("http://localhost:1080/first");
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		HttpURLConnection con= null;
		try {
			con = (HttpURLConnection) obj.openConnection();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			con.setRequestMethod("GET");
		} catch (ProtocolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int responseCode = 0;
		
		try {
			responseCode = con.getResponseCode();
			
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("GET Response Code :: " + responseCode);
		if (responseCode == HttpURLConnection.HTTP_OK) { // success
			BufferedReader in = new BufferedReader(new InputStreamReader(
					con.getInputStream()));
			String inputLine;
			StringBuffer response = new StringBuffer();

			while ((inputLine = in.readLine()) != null) {
				response.append(inputLine);
			}
			in.close();

			// print result
			System.out.println("return response: " + response.toString());
		} else {
			System.out.println("GET request not worked");
		}
	}
	
	
	@After
	public void stopProxy() {
	    //proxy.stop();
	    mockServer.stop();
	}
    public boolean someLibraryMethod() {
        return true;
    }
    
    
}
